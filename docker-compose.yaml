version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./:/app
      - ./backend/data:/app/backend/data
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - FLASK_APP=backend/port5001_server.py
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:5001
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Redis for caching and temporary storage
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge 